@startuml

actor Teacher as user
participant ListExamsInCourseUI as ui
participant ListExamsInCourseController as ctrl

participant MyUserService as user_svc
participant Teacher as teacher

participant PersistenceContext as ctx
participant RepositoryFactory as rep_fac
participant CourseRepository as course_repo
participant ExamRepository as exam_repo
participant StaffRepository as staff_repo

participant CourseAndDescriptionDTOMapper as course_mapper
participant CourseAndDescriptionDTO as course_dto

user --> ui: enter
activate ui
ui --> ctrl: create()
    activate ctrl
        ctrl --> ctx: repositories()
        activate ctx
            ctx --> rep_fac: create()
            activate rep_fac
            deactivate rep_fac
        deactivate ctx

        ctrl --> rep_fac: courses()
        activate rep_fac
            rep_fac --> course_repo: create()
            activate course_repo
            deactivate course_repo
        deactivate rep_fac

        ctrl --> rep_fac : exams()
        activate rep_fac
            rep_fac --> exam_repo: create()
            activate exam_repo
            deactivate exam_repo
        deactivate rep_fac

        ctrl --> rep_fac: staff()
        activate rep_fac
            rep_fac --> staff_repo: create()
            activate staff_repo
            deactivate staff_repo
        deactivate rep_fac
    deactivate ctrl

    ui --> ctrl: getCourses()
    activate ctrl
        ctrl --> user_svc : currentTeacher()
        activate user_svc
            user_svc --> teacher : get()
            activate teacher
            deactivate teacher
            note right : teacher obtained via the framework's\nAuthz package + TeacherRepository
            user_svc --> ctrl : teacher
        deactivate user_svc

        ctrl --> staff_repo: taughtBy(teacher)

        activate staff_repo
        deactivate staff_repo

        ctrl --> course_mapper: toDto(courses)
        activate course_mapper
            loop for each course in courses
                course_mapper --> course_dto: create()
                activate course_dto
                deactivate course_dto
            end loop
            course_mapper --> ctrl: courseDTOList
        deactivate course_mapper
        ctrl --> ui: courses

    deactivate ctrl
    ui --> user: show courses
deactivate ui

user --> ui: selects course from list
activate ui
    ui --> ctrl: listExams(course)
    activate ctrl
        ctrl --> exam_repo: findByCourse(course)
        activate exam_repo
        deactivate exam_repo
        ctrl --> ui: exams
    deactivate ctrl
    ui --> user: show exams
deactivate ui

@enduml

