@startuml

actor Student as student

participant TakeFormativeExamUI as ui
participant TakeFormativeExamController as ctrl

participant ListFormativeExamsService as svc
participant EnrollmentRepository as enrollment_repo
participant FormativeExamRepository as fexam_repo

participant FormativeExamDTOMapper as mapper
participant FormativeExamDTO as dto


student --> ui : enter
activate ui
    ui --> ctrl : create()
    activate ctrl
        note right : repositories are retrieved via\nPersistenceContext.repositories()
    deactivate ctrl

    ui --> ctrl : formativeExams()
    activate ctrl
        ctrl --> svc : forStudent(student)
        activate svc
            note right : student obtained via the framework's\nAuthz package + StudentRepository
            svc --> enrollment_repo : ongoingCoursesOfStudent(student)
            activate enrollment_repo
                enrollment_repo --> svc : courses
            deactivate enrollment_repo

            svc --> fexam_repo : formativeExamsOfCourses(courses)
            activate fexam_repo
                fexam_repo --> svc : exams
            deactivate fexam_repo
        deactivate svc

        ctrl --> mapper : create()
        activate mapper
            loop for each exam in exams
                mapper --> dto : create()
                activate dto
                deactivate dto
            end loop
            mapper --> ctrl : examDTOList
        deactivate mapper

        ctrl --> ui : examDTOList
    deactivate ctrl

    ui --> student : show
deactivate ui

@enduml
