@startuml
actor SBPClientApp as user
participant CreatePostItUI as ui
participant CreatePostItController as ctrl
participant SBProtocol as sbp



activate user
user -> ui :create Post-It
activate ui

    ui -> ctrl :create(serverIP, serverPort)
    note right: create Socket as "sock"\ncreate DataInputStream as "inS"\ncreate DataOutputStream as "outS"
    activate ctrl
        ctrl -> ctrl:canCreatePostIt()

        ctrl -> sbp : create()
        activate sbp
            ctrl -> sbp : send(outS)
            note right of ctrl: check CreatePostItHandler
            ctrl -> sbp : create(inS)
            sbp --> ctrl: boards
        deactivate sbp
    deactivate ctrl

    ui -> ctrl: getBoardsList()
    activate ctrl
        note right : parse each board
        ctrl --> ui: listBoards

    deactivate ctrl

    ui --> user : show list of boards

deactivate ui

user -> ui : chooses a board to create a Post-It on
activate ui

ui --> user : shows the user the number of rows\nand columns and ask the user to\nchoose the cell to create a Post-It on\nrespecting the limits of rows and collumns
user -> ui : chooses the cell to allocate the Post-It


    note right of ui: "arr" because reads from console in format "row,columns", checks values
    ui -> ctrl : isCellIdValid(arr, numRows, numColumns)
    activate ctrl
        ctrl --> ui : true/false
    deactivate ctrl


    ui --> user : asks the content type\neither text or image
deactivate ui
    user -> ui : chooses text or image
    activate ui

    note right of ui: in case choice was image
    ui -> ui : file = chooseFile()

    ui -> ctrl : createBoardPositionTextString(boardChosen, position, content)
    activate ctrl
        note right of ctrl : appends all information into string
        ctrl --> ui : string
    deactivate ctrl


    ui -> ctrl :createPostIt(string)
    activate ctrl
        ctrl -> sbp : create()
        activate sbp
            ctrl -> sbp : send(outS)
            note right of ctrl: check CreatePostItHandler
            note right :send string with all content
            ctrl -> sbp : create(inS)
            note right of ctrl : receives info of success of the operation
            ctrl --> ui : true/false

        deactivate sbp
    deactivate ctrl

    ui --> user : informs if Post-it was create successfully


    ui -> ctrl : close()
    activate ctrl
        note right : close socket
    deactivate ctrl
deactivate ui





@enduml


