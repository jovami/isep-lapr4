@startuml

skinparam linetype ortho
skinparam Shadowing False
'hide empty members
'left to right direction

skinparam class {
    BackgroundColor<<Entity>> Moccasin
    BackgroundColor<<value object>> Azure
    BackgroundColor<<Event>> MediumAquaMarine
    BackgroundColor<<Service>> SkyBlue
    ArrowColor DarkSlateGrey
}

skinparam package {
    BackgroundColor PowderBlue
}

'TALVEZ APAGAR O PACKAGE USER OU CORRIGIR PELO CODIGO
' ############## USERS ##############

/'class User{
    - email
    - fullName
    - shortName
    - pwd
    - name??
    - dateOfBirth
    - taxPayerNumber
}

class Student{ -mecanographicNumber}
class Teacher{ - acronimo}
class Manager{ - managerId?? }

'/

package USER <<Aggregate>> {

    class User <<root>> <<Entity>>

    class FullName <<value object>> {
        -fullName
    }

    class ShortName <<value object>> {
            -shortName
        }

    class DateOfBirth <<value object>> {
            -dateOfBirth
        }

    class Password <<value object>> {
            -password
        }

    class TaxPayerNumber <<value object>> {
                    -taxPayerNumber
                }

    class Role <<value object>> {
        -description
        -function
    }

    note right : A User can be a Student, Teacher, \nManager.
}

' ############## USERS ##############

User "1" ---down> "1" FullName
User "1" ---down> "1" ShortName
User "1" ---down> "1" DateOfBirth
User "1" ---down> "1" TaxPayerNumber
User "1" ---down> "1" Password
User "*" ---down> "*"Role



' ############## COURSE ##############

/'
    class Course{
        - courseId @Id??
        - courseName
        - Collections<> Teacher:regent
        - description
        - minStudents
        - maxStudents
    }
'/

package COURSE <<Aggregate>> {

    /'FALTA VER COMO ADICIONAR ISTO
    - courseId @Id??
    - Collections<> Teacher:regent
    '/

    class Course <<root>> <<Entity>>

    class CourseName <<value object>> {
        -courseName
    }

    class Description <<value object>> {
            -description
        }

    class Capacity <<value object>> {
            -minStudents
            -maxStudents
        }

    }

' ############## COURSE ##############

Course "1" ---down> "1" CourseName
Course "1" ---down> "1" Description
Course "1" ---down> "1" Capacity

' ############## EXAMS ##############

/'class Exam{
      - title
      - description


      - Course: course??
      - openDate
      - closeDate

      - header
      - sequenceSection
      - questionTypes
  }'/


package EXAM <<Aggregate>> {

    /'FALTA VER COMO ADICIONAR ISTO
        -Course: course?? '/

    class Exam <<root>> <<Entity>>

    class Title <<value object>> {
        -title
    }

    class Description <<value object>> {
            -description
        }

    class OpenDate <<value object>> {
            -openDate
        }

    class CloseDate <<value object>> {
                    -closeDate
                }

    class Header <<value object>> {
        -header
    }

    class SequenceSection <<value object>> {
            -sequenceSection
        }

    class QuestionType <<value object>> {
            -questionType
        }

}

' ############## EXAMS ##############

Exam "1" ---down> "1" Title
'Exam "1" ---down> "1" Description
Exam "1" ---down> "1" OpenDate
Exam "1" ---down> "1" CloseDate
Exam "1" ---down> "1" Header
Exam "1" ---down> "1" SequenceSection
Exam "1" ---down> "1" QuestionType

' ############## BOARD ##############

/'class Board{
    - Student:admin
    - Collection:usersInvited
    - historyUpdates
    - rows/columns property file
}'/

package BOARD <<Aggregate>> {

    class Board <<root>> <<Entity>>

    class HistoryUpdate <<value object>> {
        -historyUpdate
    }
}

' ############## BOARD ##############

Board "1" ---down> "1" HistoryUpdate


' ############## MEETING ##############

/'
class Meeting{
    -time
    -duration
    -User:admin
    -Collection:usersInvited
}'/

package MEETING <<Aggregate>> {

    /'FALTA VER COMO ADICIONAR ISTO
             -User:admin
             -Collection:usersInvited '/

    class Meeting <<root>> <<Entity>>

    class Time <<value object>> {
        -time
    }

    class Duration <<value object>> {
            -duration
        }
}

Meeting "1" ---down> "1" Time
Meeting "1" ---down> "1" Duration

' ############## STUDENT ##############

package STUDENT <<Aggregate>> {

    class Student <<root>> <<Entity>>

    class MecanographicNumber <<value object>> {
        -mecanographicNumber
    }
}

' ############## TEACHER ##############

package TEACHER <<Aggregate>> {

    class Teacher <<root>> <<Entity>>

    class Acrimony <<value object>> {
        -acrimony
    }
}

' ############## MANAGER ##############
'NAO FAZ SENTIDO A CENA DE MANAGERID
package MANAGER <<Aggregate>> {

    class Manager <<root>> <<Entity>>

    class ManagerId <<value object>> {
        -managerId
    }
}

}

/'
class Enrollment{
    -studentId
    -courseId
    -finalGrade
}

class Class{
    - Title @Id
    - date
    - duration
    
    - Course: course??
    - teacher??
}

class QuestionTypes{
    - enumerate
    - matching
    - multipleChoices
    - shortAnswer
    - numerical
    - selectMissingWord
    - true/False
}

class ExamResult{
    - Exam
    - Student
    - feedback
    - grade
}

class PostIt{
    - postItId
    - text
}

''
User --> Teacher
User --> Student
User --> Manager

''Courses

Manager ---> Course : Manages >
Manager ---> Enrollment : Manages >

Teacher -left-> Class : Creates >

Enrollment "1" ---* "1" Student
Enrollment "1" ---* "1" Course

Course "1" ---* "*" Class



''Exams

' Student --> Exam
Student --> ExamResult

Teacher "1" -up-> "*" Exam
Course "1" *-- "*" Exam
Exam "1" *-- "*" ExamResult 

Exam "1" ---> "*" QuestionTypes


''Shared Boards

' User --> Admin : is the >
User "1" ----> "*" Board : manages >
Board "1" --* "*" User : contains >

Board "1" ---> "*" PostIt : contains >
User "*" ---> "*" PostIt : manages >




''Meeting
' User --> Admin : is the >
User "1" ---> "*" Meeting : managers >
Meeting "1" ---* "*" User : contains >'/






@enduml