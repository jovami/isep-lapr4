@startuml

actor Manager as user
participant Open_CloseCourseUI as ui
participant Open_CloseCourseController as ctrl

participant PersistenceContext as ctx
participant RepositoryFactory as rep_fac
participant CouseRepository as repo

participant ListCoursesService as svc

participant CourseAndStateDTOMapper as mapper
participant CourseAndStateDTO as dto

participant Course as course

user --> ui: enter

activate ui
    ui --> ctrl: create()
    activate ctrl
        ctrl --> ctx: repositories()
        activate ctx
            ctx --> rep_fac: create()
            activate rep_fac
            deactivate rep_fac
        deactivate ctx

        ctrl --> rep_fac: courses()
        activate rep_fac
            rep_fac --> repo: create()
            activate repo
            deactivate repo
        deactivate rep_fac
    deactivate ctrl


    ui --> ctrl: getCourses()
    activate ctrl
        ctrl --> svc: openable/closable(repository)
        activate svc
            svc --> repo: findByState()
            activate repo
            deactivate repo
        deactivate svc

        ctrl --> mapper: toDto(courses)
        activate mapper
            loop for each course in courses
                mapper --> dto: create()
                activate dto
                deactivate dto
            end loop
        deactivate mapper

        ctrl --> ui: courses
    deactivate ctrl

    ui --> user: show courses
deactivate ui

user --> ui: selects course from list
activate ui
    ui --> ctrl: chosen course (dto)
    activate ctrl
        ctrl ---> course: open/close()
        activate course
            course --> ctrl: result
        deactivate course

        ctrl --> ui: result
    deactivate ctrl

    ui --> user: show result
deactivate ui

@enduml
