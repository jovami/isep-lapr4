@startuml

actor Student as user
participant ListAvailableCoursesUI as ui
participant ListAvailableCoursesController as ctrl

' participant PersistenceContext as ctx
' participant RepositoryFactory as rep_fac

participant MyUserService as user_svc
participant Student as student

' participant SystemUser as sys_usr
' participant StudentRepository as s_repo

participant ListCoursesService as svc

participant CouseRepository as c_repo
participant EnrollmentRepositry as e_repo


' participant AuthzRegistry as authreg
' participant AuthorizationService as authsvc
' participant Session as sess


participant AvailableCourseDTOMapper as mapper
participant AvailableCourseDTO as dto

' participant Course as course

user --> ui : enter

activate ui
    ui --> ctrl : create()
    activate ctrl
        note right : repositories are retrieved via\nPersistenceContext.repositories()
    deactivate ctrl

    ui --> ctrl : availableCourses()
    activate ctrl
        ctrl --> user_svc : currentStudent()
        activate user_svc
            user_svc --> student : get()
            activate student
            deactivate student
            note right : student obtained via the framework's\nAuthz package + StudentRepository
            user_svc --> ctrl : student
        deactivate user_svc

        ctrl --> svc : studentIsEnrolledOrCanEnroll(student)
        activate svc
            svc --> c_repo : enrollable()

            activate c_repo
                c_repo --> svc : courses
            deactivate c_repo

            svc --> svc : add(courses)

            svc --> e_repo : coursesOfEnrolledStudent(student)
            activate e_repo
                e_repo --> svc : courses
            deactivate e_repo

            svc --> svc : add(courses)
            note right : ensure no duplicate\ncourses are added

            svc --> ctrl : courses
        deactivate svc

        ctrl --> mapper: toDTO(courses)
        activate mapper
            loop for each course in courses
                mapper --> dto: create()
                activate dto
                deactivate dto
            end loop
            mapper --> ctrl: courseDTOList
        deactivate mapper

        ctrl --> ui : courseDTOList
    deactivate ctrl

    ui --> user : show available courses
deactivate ui

@enduml
